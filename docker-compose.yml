version: "3"
services:
  wk-redis:
    image: redis:latest
    restart: always
    networks:
      - outlinewiki
  wk-postgres:
    image: postgres:${POSTGRES_VERSION}
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: outline
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    networks:
      - outlinewiki
  wk-outline:
    image: outlinewiki/outline:${OUTLINE_VERSION}
    command: sh -c "yarn db:migrate --env production-ssl-disabled && yarn start"
    environment:
      - DATABASE_URL=postgres://user:pass@wk-postgres:5432/outline
      - DATABASE_URL_TEST=postgres://user:pass@wk-postgres:5432/outline-test
      - REDIS_URL=redis://wk-redis:6379
      - AWS_S3_UPLOAD_BUCKET_NAME=outline-bucket
    env_file:
      - ./env.outline
      - ./env.oidc
    volumes:
      - ./data/outline:/var/lib/outline/data
    restart: always
    depends_on:
      - wk-postgres
      - wk-redis
    networks:
      - outlinewiki
  wk-oidc-server:
    image: vicalloy/oidc-server
    volumes:
      - ./config/uc/fixtures:/app/oidc_server/fixtures:z
      - ./data/uc/db:/app/db:z
      - ./data/uc/static_root:/app/static_root:z
    restart: always
    env_file:
      - ./env.oidc-server
    networks:
      - outlinewiki
  wk-nginx:
    image: nginx
    ports:
      - ${HTTP_IP}:${HTTP_PORT_IP}:80
    volumes:
      - ./config/nginx/:/etc/nginx/conf.d/:ro
      - ./data/uc/static_root:/uc/static_root:ro
    restart: always
    depends_on:
      - wk-outline
      - wk-oidc-server
    networks:
      - outlinewiki
networks:
  outlinewiki:
    external: ${NETWORKS_EXTERNAL}
volumes:
  pgdata:
